{"ast":null,"code":"const initialState = {\n  tasks: [],\n  selectedTask: null,\n  loading: false,\n  error: null\n};\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_TASKS_SUCCESS':\n      return {\n        ...state,\n        tasks: action.payload,\n        loading: false\n      };\n    case 'FETCH_TASK_SUCCESS':\n      return {\n        ...state,\n        selectedTask: action.payload,\n        loading: false\n      };\n    case 'CREATE_TASK_SUCCESS':\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload],\n        loading: false\n      };\n    case 'UPDATE_TASK_SUCCESS':\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task._id === action.payload._id ? action.payload : task),\n        loading: false\n      };\n    case 'FETCH_TASKS_FAILURE':\n    case 'FETCH_TASK_FAILURE':\n    case 'CREATE_TASK_FAILURE':\n    case 'UPDATE_TASK_FAILURE':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["initialState","tasks","selectedTask","loading","error","taskReducer","state","action","type","payload","map","task","_id"],"sources":["C:/Users/ayush/Desktop/task-management-app/frontend/src/redux/reducers/taskReducer.js"],"sourcesContent":["const initialState = {\r\n    tasks: [],\r\n    selectedTask: null,\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_TASKS_SUCCESS':\r\n            return { ...state, tasks: action.payload, loading: false };\r\n        case 'FETCH_TASK_SUCCESS':\r\n            return { ...state, selectedTask: action.payload, loading: false };\r\n        case 'CREATE_TASK_SUCCESS':\r\n            return { ...state, tasks: [...state.tasks, action.payload], loading: false };\r\n        case 'UPDATE_TASK_SUCCESS':\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map((task) =>\r\n                    task._id === action.payload._id ? action.payload : task\r\n                ),\r\n                loading: false\r\n            };\r\n        case 'FETCH_TASKS_FAILURE':\r\n        case 'FETCH_TASK_FAILURE':\r\n        case 'CREATE_TASK_FAILURE':\r\n        case 'UPDATE_TASK_FAILURE':\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default taskReducer;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,YAAY,EAAE,IAAI;EAClBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,qBAAqB;MACtB,OAAO;QAAE,GAAGF,KAAK;QAAEL,KAAK,EAAEM,MAAM,CAACE,OAAO;QAAEN,OAAO,EAAE;MAAM,CAAC;IAC9D,KAAK,oBAAoB;MACrB,OAAO;QAAE,GAAGG,KAAK;QAAEJ,YAAY,EAAEK,MAAM,CAACE,OAAO;QAAEN,OAAO,EAAE;MAAM,CAAC;IACrE,KAAK,qBAAqB;MACtB,OAAO;QAAE,GAAGG,KAAK;QAAEL,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAK,EAAEM,MAAM,CAACE,OAAO,CAAC;QAAEN,OAAO,EAAE;MAAM,CAAC;IAChF,KAAK,qBAAqB;MACtB,OAAO;QACH,GAAGG,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACS,GAAG,CAAEC,IAAI,IACxBA,IAAI,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACG,GAAG,GAAGL,MAAM,CAACE,OAAO,GAAGE,IACvD,CAAC;QACDR,OAAO,EAAE;MACb,CAAC;IACL,KAAK,qBAAqB;IAC1B,KAAK,oBAAoB;IACzB,KAAK,qBAAqB;IAC1B,KAAK,qBAAqB;MACtB,OAAO;QAAE,GAAGG,KAAK;QAAEF,KAAK,EAAEG,MAAM,CAACE,OAAO;QAAEN,OAAO,EAAE;MAAM,CAAC;IAC9D;MACI,OAAOG,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}