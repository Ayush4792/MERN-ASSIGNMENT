{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Desktop\\\\task-management-app\\\\frontend\\\\src\\\\components\\\\TaskListView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasks } from '../redux/actions/taskActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskListView = () => {\n  _s();\n  const dispatch = useDispatch();\n  const tasks = useSelector(state => state.tasks.tasks);\n  const loading = useSelector(state => state.tasks.loading);\n  const error = useSelector(state => state.tasks.error);\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(tasks) && tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task.title\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskListView, \"jpoz0GgR8oexAJKzRyLmDFZdJZY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = TaskListView;\nexport default TaskListView;\nvar _c;\n$RefreshReg$(_c, \"TaskListView\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchTasks","jsxDEV","_jsxDEV","TaskListView","_s","dispatch","tasks","state","loading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","task","title","_id","_c","$RefreshReg$"],"sources":["C:/Users/ayush/Desktop/task-management-app/frontend/src/components/TaskListView.js"],"sourcesContent":["\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchTasks } from '../redux/actions/taskActions';\r\n\r\nconst TaskListView = () => {\r\n    const dispatch = useDispatch();\r\n    const tasks = useSelector((state) => state.tasks.tasks); \r\n    const loading = useSelector((state) => state.tasks.loading);\r\n    const error = useSelector((state) => state.tasks.error);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasks());\r\n    }, [dispatch]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Task List</h1>\r\n            <ul>\r\n                {Array.isArray(tasks) && tasks.map((task) => (\r\n                    <li key={task._id}>\r\n                        {task.title}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskListView;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,KAAK,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EACvD,MAAME,OAAO,GAAGT,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EAC3D,MAAMC,KAAK,GAAGV,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACG,KAAK,CAAC;EAEvDZ,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACK,QAAQ,CAAC,CAAC;EAEd,IAAIG,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAIL,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAAQ,QAAA,GAAK,SAAO,EAACD,KAAK;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpC;EACA,oBACIZ,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBZ,OAAA;MAAAQ,QAAA,EACKK,KAAK,CAACC,OAAO,CAACV,KAAK,CAAC,IAAIA,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACpChB,OAAA;QAAAQ,QAAA,EACKQ,IAAI,CAACC;MAAK,GADND,IAAI,CAACE,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACV,EAAA,CA7BID,YAAY;EAAA,QACGL,WAAW,EACdC,WAAW,EACTA,WAAW,EACbA,WAAW;AAAA;AAAAsB,EAAA,GAJvBlB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}